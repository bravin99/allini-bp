@page "/products"
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Products</PageTitle>

<MudContainer>
    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Tertiary" @onclick="NavToCreate" Class="m-2">Create New</MudButton>
    
    <MudTable Items="@ProductList" Dense="false" Hover="true" Bordered="false" Striped="false" Filter="new Func<Product,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1" Class="mt-5 mb-3">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Product List</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="SearchParam" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>SKU</MudTh>
            <MudTh>Bar Code</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Quantity</MudTh>
            <MudTh>Cost</MudTh>
            <MudTh>Sales Price</MudTh>
            @* <MudTh>Last Count</MudTh> *@
            <MudTh>Remaining</MudTh>
            <MudTh>Location</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Products Count">@context.Sku</MudTd>
            <MudTd DataLabel="Name">@context.BarCode</MudTd>
            <MudTd DataLabel="Products Count">@context.Name</MudTd>
            <MudTd DataLabel="Display">@context.Quantity</MudTd>
            <MudTd DataLabel="Display">@context.Cost</MudTd>
            <MudTd DataLabel="Created">@context.SalesPrice</MudTd>
            @* <MudTd DataLabel="Updated">@context.LastCount</MudTd> *@
            <MudTd DataLabel="Updated">@context.AdjustedCount</MudTd>
            <MudTd DataLabel="Updated">@context.Location</MudTd>
            <MudTd DataLabel="Actions">
                <MudIconButton Icon="@Icons.Material.Filled.PanoramaFishEye" Color="Color.Tertiary" aria-label="view" Title="View" @onclick="@(() => NavigationManager.NavigateTo($"/products/{context.Id}/details"))"></MudIconButton>
                <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Tertiary" aria-label="edit" Title="Edit" @onclick="@(() => NavigationManager.NavigateTo($"/products/{context.Id}/update"))"></MudIconButton>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" aria-label="delete" Title="Delete"></MudIconButton>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</MudContainer>

@code
{
    public Product[]? ProductList;
    private string SearchParam = string.Empty;
    private Product selectedItem1 = null!;
    private bool FilterFunc1(Product element) => FilterFunc(element, SearchParam);

    private bool FilterFunc(Product element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.BarCode.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }


    protected async override Task OnInitializedAsync()
    {
        await GetProducts();
    }
    
    private async Task GetProducts()
    {
        ProductList = await ProductService.GetProducts()!;
    }
    
    private void NavToCreate()
    {
        NavigationManager.NavigateTo("/products/create");
    }
}

